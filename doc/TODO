
* Parser for species expressions

* Think about having 'ofSize' take an expression from a small language
  of size constraints, rather than a general Haskell size predicate

* Improve rec for CycleIndex, right now it has 10 iterations
  hard-coded etc.  Really, I guess this just means improving the
  Newton-Raphson interface and figuring out how to make it lazier.

* Lazier Newton-Raphson in Labelled

* Fix unlabelled enumeration bug for cartesian product.  Unlabelled
  enumeration needs to return things with actual labels (not just ())
  since using () doesn't work with cartesian product.  This actually
  seems quite difficult.  Instead of working with a multiset (i.e. set
  of equivalence classes) we need to be able to work with any
  conjugacy class of Sn!

* Take care of XXX comments in enumerate'

* Import isomorphism stuff from paper into library and give
  iso method from Enumerate class the type signature
    iso :: StructTy f <-> f

* Rework types for enumerate', enumerateE', etc. to be a bit more
  elegant/consistent.

* implementation for omega in Labelled

* fix problem in NewtonRaphson with remaining occurrences of X

* simplify the Simplify module!

* Document the exact normal form returned by 'simplify'

* Add proper Eq (and Ord?) instances for Cycle and Set functors in Structure

* Think about Show instance for Star etc., does it need fixing?

* Add some examples to illustrate Mu/Interp/ASTFunctor

* CLEAN UP/COMMENT Species.TH !!

* Add more documentation to deriveSpecies in TH

* More features in TH:
  - first, write down formal system describing how it works!?
  - directed species derivation
  - deal with things like Maybe, Either, (), Bool, and arrow types
    with finite LHSs

New features
============

* Random generation

* Virtual species

* Atomic and molecular decomposition