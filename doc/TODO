
* Parser for species expressions

* Move reify/reflect functions to separate module?

* Better name for unerase?

* Think about having 'ofSize' take an expression from a small language
  of size constraints, rather than a general Haskell size predicate

* Be sure not to export 'omega' from the Species module

* Improve rec for CycleIndex, right now it has 10 iterations
  hard-coded etc.  Really, I guess this just means improving the
  Newton-Raphson interface and figuring out how to make it lazier.

* Lazier Newton-Raphson in Labelled

* Fix unlabelled enumeration bug for cartesian product, I forget what
  the issue is exactly...

* Take care of XXX comments in enumerate'

* Better names for Enumerable (?) and especially for 'iso'

* Add examples in Enumerate for enumerateXX 

* Rework types for enumerate', enumerateE', etc. to be a bit more
  elegant/consistent.

* implementation for omega in Labelled

* fix problem in NewtonRaphson with remaining occurrences of X

* simplify the Simplify module!

* Document the exact normal form returned by 'simplify'

* Add proper Eq (and Ord?) instances for Cycle and Set functors in Structure

* Think about Show instance for Star etc., does it need fixing?

* Add some examples to illustrate Mu/Interp/ASTFunctor

* CLEAN UP/COMMENT Species.TH !!

* Add more documentation to deriveSpecies in TH

New features
============

* Random generation